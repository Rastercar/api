version: 2.1

orbs:
  node: circleci/node@5.0.0
  aws-ecr: circleci/aws-ecr@7.3.0
  aws-ecs: circleci/aws-ecs@2.2.1

jobs:
  test-unit:
    executor:
      name: node/default
      tag: '14.17'
    steps:
      - checkout
      - node/install-packages:
          pkg-manager: yarn
      - run:
          command: yarn run test:unit-circleci
          name: Run unit tests

  test-e2e:
    docker:
      - image: cimg/node:14.17
      - image: cimg/postgres:14.0-postgis
        environment:
          POSTGRES_DB: raster_test
          POSTGRES_USER: raster_user
          POSTGRES_PASSWORD: raster_pass
    steps:
      - checkout
      - node/install-packages:
          pkg-manager: yarn
      - run:
          command: yarn run test:e2e-circleci
          name: Run e2e tests

workflows:
  main-workflow:
    jobs:
      # TODO: Uncomment test-unit and test-e2e when things go into homologation again
      # - test-unit
      # - test-e2e:
      #     requires:
      #       # Since e2e tests are expensive only run then after unit tests, this way if unit tests fail e2e tests will be skipped
      #       - test-unit
      - aws-ecr/build-and-push-image:
          # Only bother deploying if tests pass
          requires:
            - test-e2e
          # Only bother deploying the image if were commiting to production (master) or homologation (homolog)
          filters:
            branches:
              only:
                - master
                - homolog
          repo: rastercar-api-repository
          # Tag with the branch so a human can differ between homolog and production images
          tag: '${CIRCLE_BRANCH}-${CIRCLE_SHA1}'

      # Updates the rastercar ECS service, this will make it run the image built on aws-ecr/build-and-push-image
      - aws-ecs/deploy-service-update:
          cluster-name: rastercar-api-homolog-cluster
          container-image-name-updates: 'container=rastercar-api-container,tag=${CIRCLE_BRANCH}-${CIRCLE_SHA1}'
          family: rastercar-api-task
          service-name: rastercar-api-homolog-service
          requires:
            - aws-ecr/build-and-push-image
