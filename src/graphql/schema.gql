# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

"""The access level to the tracked dashboard"""
type AccessLevelModel {
  description: String!
  id: Int!
  name: String!
  permissions: [PERMISSION!]!
}

"""JSON Web Token"""
type JwtModel {
  type: String!
  value: String!
}

input LoginInput {
  email: String!
  password: String!
}

type LoginResponse {
  token: JwtModel!
  user: UserOrMasterUser!
}

enum MASTER_PERMISSION {
  EDIT_OTHER_USERS
}

"""The access level to the tracker dashboard"""
type MasterAccessLevelModel {
  description: String!
  id: Int!
  name: String!
  permissions: [MASTER_PERMISSION!]!
}

"""master user (a user with access to the main panel"""
type MasterUserModel {
  accessLevel: AccessLevelModel!
  email: String!
  emailVerified: Boolean!
  id: Int!
  masterAccessLevel: MasterAccessLevelModel!
  username: String!
}

type Mutation {
  login(credentials: LoginInput!): LoginResponse!
  loginWithToken(token: String!): LoginResponse!
  register(user: RegisterUserDTO!): LoginResponse!
  updateMyProfile(profileData: UpdateUserDTO!): UserModel!
}

"""organization"""
type OrganizationModel {
  billingEmail: String!
  billingEmailVerified: Boolean!
  blocked: Boolean!
  id: Int!
  name: String!
  trackers: [TrackerModel!]!
  users: [UserModel!]!
  vehicles: [VehicleModel!]!
}

enum PERMISSION {
  EDIT_OTHER_USERS
}

type Query {
  isEmailInUse(email: String!): Boolean!
  me: UserOrMasterUser!
  organizations: [OrganizationModel!]
  unregisteredUser(uuid: String!): UnregisteredUserModel
  user(id: Int!): UserModel
}

input RegisterUserDTO {
  email: String!
  password: String!

  """
  UUID of the unregistered user this registration refers to, once finished the referred unregistered user will be deleted, this is also used to determine wheter the user being registered uses oauth for authentication
  """
  refersToUnregisteredUser: String
  username: String!
}

"""sim card"""
type SimCardModel {
  apnAddress: String!
  apnPassword: String!
  apnUser: String!
  id: Int!
  phoneNumber: String!
  ssn: String!
  tracker: TrackerModel
}

"""tracker"""
type TrackerModel {
  id: Int!
  model: String!
  simCards: [SimCardModel!]!
  vehicle: VehicleModel!
}

"""unregistered user"""
type UnregisteredUserModel {
  email: String!
  emailVerified: Boolean!
  username: String
  uuid: String!
}

input UpdateUserDTO {
  email: String

  """
  The user old password, required when changing the user password with the password prop
  """
  oldPassword: String
  password: String
  removeGoogleProfileLink: Boolean
  username: String
}

"""user"""
type UserModel {
  accessLevel: AccessLevelModel!
  email: String!
  emailVerified: Boolean!
  googleProfileId: String
  id: Int!
  organization: OrganizationModel!
  username: String!
}

union UserOrMasterUser = MasterUserModel | UserModel

"""vehicle"""
type VehicleModel {
  brand: String
  chassisNumber: String
  color: String
  fabricationYear: Float
  id: Int!
  model: String
  modelYear: Float
  plate: String!
  renavam: String
  trackers: [TrackerModel!]!
}
